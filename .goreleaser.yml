# step-kms-plugin .goreleaser.yml file.
# Check the documentation at:
#  - http://goreleaser.com
#  - https://github.com/goreleaser/goreleaser-cross
#  - https://github.com/goreleaser/goreleaser-cross-example
project_name: step-kms-plugin
version: 2

variables:
  packageName: step-kms-plugin
  packageRelease: 1 # Manually update release: in the nfpm section to match this value if you change this

after:
  hooks:
    # This script depends on IS_PRERELEASE env being set. This is set by CI in the Is Pre-release step.
    - cmd: bash scripts/package-repo-import.sh {{ .Var.packageName }} {{ .Version }}
      output: true
      env:
      - IS_PRERELEASE={{ .Env.IS_PRERELEASE }}

builds:
  - id: linux-amd64
    main: ./main.go
    binary: step-kms-plugin
    goos:
      - linux
    goarch:
      - amd64
    env:
      - CC=gcc
      - CXX=g++
    flags:
      - -trimpath
    ldflags:
      - -s -w -X {{.ModulePath}}/cmd.Version={{.Version}} -X {{.ModulePath}}/cmd.ReleaseDate={{.Date}}
  - id: linux-arm64
    main: ./main.go
    binary: step-kms-plugin
    goos:
      - linux
    goarch:
      - arm64
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    flags:
      - -trimpath
    ldflags:
      - -s -w -X {{.ModulePath}}/cmd.Version={{.Version}} -X {{.ModulePath}}/cmd.ReleaseDate={{.Date}}
  - id: darwin-amd64
    main: ./main.go
    binary: step-kms-plugin
    goos:
      - darwin
    goarch:
      - amd64
    env:
      - CC=o64-clang
      - CXX=o64-clang++
      - LD_LIBRARY_PATH=/osxcross/lib
    flags:
      - -trimpath
    ldflags:
      - -s -w -X {{.ModulePath}}/cmd.Version={{.Version}} -X {{.ModulePath}}/cmd.ReleaseDate={{.Date}}
  - id: darwin-arm64
    main: ./main.go
    binary: step-kms-plugin
    goos:
      - darwin
    goarch:
      - arm64
    env:
      - CC=oa64-clang
      - CXX=oa64-clang++
      - LD_LIBRARY_PATH=/osxcross/lib
    flags:
      - -trimpath
    ldflags:
      - -s -w -X {{.ModulePath}}/cmd.Version={{.Version}} -X {{.ModulePath}}/cmd.ReleaseDate={{.Date}}
  - id: windows-amd64
    main: ./main.go
    binary: step-kms-plugin
    goos:
      - windows
    goarch:
      - amd64
    env:
      - CC=x86_64-w64-mingw32-gcc
      - CXX=x86_64-w64-mingw32-g++
    flags:
      - -trimpath
    ldflags:
      - -s -w -X {{.ModulePath}}/cmd.Version={{.Version}} -X {{.ModulePath}}/cmd.ReleaseDate={{.Date}}
  - id: windows-arm64
    main: ./main.go
    binary: step-kms-plugin
    goos:
      - windows
    goarch:
      - arm64
    env:
      - CC=/llvm-mingw/bin/aarch64-w64-mingw32-gcc
      - CXX=/llvm-mingw/bin/aarch64-w64-mingw32-g++
    flags:
      - -trimpath
    ldflags:
      - -s -w -X {{.ModulePath}}/cmd.Version={{.Version}} -X {{.ModulePath}}/cmd.ReleaseDate={{.Date}}

archives:
  - id: step-kms-plugin
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}"
    format_overrides:
      - goos: windows
        formats: [ 'zip' ]
    ids:
      - linux-amd64
      - linux-arm64
      - darwin-amd64
      - darwin-arm64
      - windows-amd64
      - windows-arm64
    wrap_in_directory: "{{ .ProjectName }}_{{ .Version }}"
    files:
      - README.md
      - LICENSE
      - completions/*

nfpms:
  - id: packages
    ids:
      - linux-amd64
      - linux-arm64
    package_name: "{{ .Var.packageName }}"
    release: "1"
    file_name_template: >-
      {{- trimsuffix .ConventionalFileName .ConventionalExtension -}}
      {{- if and (eq .Arm "6") (eq .ConventionalExtension ".deb") }}6{{ end -}}
      {{- if not (eq .Amd64 "v1")}}{{ .Amd64 }}{{ end -}}
      {{- .ConventionalExtension -}}
    vendor: Smallstep Labs
    homepage: https://github.com/smallstep/step-kms-plugin
    maintainer: Smallstep <techadmin@smallstep.com>
    description: >
      step-kms-plugin is a plugin for step to manage keys and certificates on a cloud KMSs and HSMs
    license: Apache 2.0
    section: utils
    formats:
      - deb
      - rpm
    priority: optional
    bindir: /usr/bin
    contents:
      - src: completions/bash_completion
        dst: /usr/share/bash-completion/completions/step-kms-plugin
      - src: completions/zsh_completion
        dst: /usr/share/zsh/vendor-completions/_step-kms-plugin
        packager: deb
      - src: completions/zsh_completion
        dst: /usr/share/zsh/site-functions/_step-kms-plugin
        packager: rpm
    rpm:
      signature:
          key_file: "{{ .Env.GPG_PRIVATE_KEY_FILE }}"
    deb:
      signature:
          key_file: "{{ .Env.GPG_PRIVATE_KEY_FILE }}"
          type: origin
    overrides:
      deb:
        dependencies:
          - libpcsclite1
      rpm:
        dependencies:
          - pcsc-lite-libs

sboms:
  - id: archive
    artifacts: archive
    args: ["$artifact", "--output", "cyclonedx-json=$document"]
    env:
      - SYFT_GOLANG_SEARCH_LOCAL_MOD_CACHE_LICENSES=true
  - id: binary
    artifacts: binary
    args: ["$artifact", "--output", "cyclonedx-json=$document"]

checksum:
  name_template: "checksums.txt"

publishers:
- name: Google Cloud Artifact Registry
  ids:
  - packages
  cmd: ./scripts/package-upload.sh {{ abs .ArtifactPath }} {{ .Var.packageName }} {{ .Version }} {{ .Var.packageRelease }}
  env:
  - IS_PRERELEASE={{ .Env.IS_PRERELEASE }}

snapshot:
  version_template: "{{ .Tag }}"

changelog:
  sort: asc

release:
  github:
    owner: smallstep
    name: step-kms-plugin
  prerelease: auto
  draft: false
